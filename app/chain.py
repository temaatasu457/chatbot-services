import logging, time
from langchain_core.messages import AIMessage, HumanMessage
from langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder
from langchain_core.chat_history import BaseChatMessageHistory
from langchain_redis import RedisChatMessageHistory
from langchain_core.output_parsers import StrOutputParser
from langchain_postgres.vectorstores import PGVector, DistanceStrategy
from langchain_openai import ChatOpenAI, OpenAIEmbeddings
from dotenv import load_dotenv
import requests, json
from prometheus_client import Histogram
from env import load_config

load_dotenv()
requests.packages.urllib3.disable_warnings(requests.packages.urllib3.exceptions.InsecureRequestWarning)

# –ú–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –ë–î –∏ API-–∑–∞–ø—Ä–æ—Å–æ–≤
DB_QUERY_TIME = Histogram("db_query_time_seconds", "Time taken for DB query")
API_REQUEST_TIME = Histogram("api_request_time_seconds", "Time taken for OpenAI API request")


config = load_config('env-path')
emb_model = OpenAIEmbeddings(model='text-embedding-3-small', api_key=config.api_key.openai_api_key)
vector_db = PGVector(
    embeddings=emb_model,
    connection=config.vdb.database_url,
    collection_name="chatbot_base",
    use_jsonb=True,
    distance_strategy=DistanceStrategy.COSINE
)

LANG_NAMES = {"ru" : '–†—É—Å—Å–∫–∏–π', "kk": '“ö–∞–∑–∞“õ—à–∞', "en" : 'English'}
    
def initialize_retriever():
    return vector_db.as_retriever(
        search_type="mmr",
        search_kwargs={
            "k": 10,
            "fetch_k": 20,
            "lambda_mult": 0.4,
        }
    )

def get_redis_history(session_id: str) -> BaseChatMessageHistory:
    return RedisChatMessageHistory(
        session_id,
        redis_url=config.redis.redis_url,
        key_prefix="ai_chat:",
        ttl=7200,
    )
    
def generate_answer(question, session_id, lang_code):
    retriever = initialize_retriever()
    chat_history = get_redis_history(session_id)
    stmem = chat_history.messages[-10:]
    language = LANG_NAMES[lang_code]
    try:
        start_db = time.perf_counter()
        with DB_QUERY_TIME.time():
            docs = retriever.invoke(question)
        db_time = time.perf_counter() - start_db
    except Exception as e:
        logging.error(f"Error retrieving documents: {str(e)}")
        print(f"Error retrieving documents: {str(e)}")
        return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –º–µ–Ω—è –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ. üôè", 0, 0
    if not docs:
        return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –Ω–∞—à–µ–ª –ø–æ–¥—Ö–æ–¥—è—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ. üôè", 0, 0
    
    prompt = ChatPromptTemplate.from_messages(
        [
            ('system', """–¢—ã - –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –±–∞–Ω–∫–∞, –ø–æ–º–æ–≥–∞—é—â–∏–π –∫–ª–∏–µ–Ω—Ç—É —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –µ–≥–æ –∑–∞–ø—Ä–æ—Å, —Å—Ç—Ä–æ–≥–æ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—è—Å—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π.
            
            # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            1. –ù–µ–Ω—É–∂–Ω–æ –∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º, —Å—Ä–∞–∑—É –ø—Ä–µ–¥–ª–∞–≥–∞–π –ø–æ–º–æ—â—å.
            2. –¢—ã —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ—à—å –∏ –Ω–µ –º–æ–∂–µ—à—å –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–ª–æ–∂–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ø—Ä–æ–≤–µ—Ä–∫—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π).
            3. –ò–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ç—ã –ø–æ–ª—É—á–∏—à—å —Ä—è–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –¥–ª—è –ø–æ–º–æ—â–∏ –∫–ª–∏–µ–Ω—Ç—É. –ù–æ –Ω–µ –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –º–æ–∂–µ—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫–ª–∏–µ–Ω—Ç–∞. –í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω–æ–µ –∏ –∏—Å–ø–æ–ª—å–∑—É–π –¥–ª—è –æ—Ç–≤–µ—Ç–∞. –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ.
            4. –ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ - —Ä–∞–∑–±–µ—Ä–∏ –¥–µ—Ç–∞–ª—å–Ω–æ –≤–æ–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞, —Å–æ–ø–æ—Å—Ç–∞–≤—å —Å –∏—Å—Ç–æ—Ä–∏–µ–π —á–∞—Ç–∞, –∑–∞—Ç–µ–º —Å—Ä–∞–≤–Ω–∏ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
                - –ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞, —Ç–æ –ª—é–±–µ–∑–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å –µ–≥–æ.
                - –ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –µ—Å—Ç—å –Ω–µ–ø–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ —Ç–µ–º—É –≤–æ–ø—Ä–æ—Å–∞ –∫–ª–∏–µ–Ω—Ç–∞, —Ç–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å –µ—ë –∏ —É—Ç–æ—á–Ω–∏, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —Ç—ã –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –µ–≥–æ –≤–æ–ø—Ä–æ—Å.
                - –ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å—Ö–æ–∂–∞—è —Å —Ç–µ–º–æ–π –≤–æ–ø—Ä–æ—Å–∞ –∫–ª–∏–µ–Ω—Ç–∞, —Ç–æ –æ—Ç–≤–µ—Ç—å –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–∞—Ö —Ñ—Ä–∞–∑ "–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ" –Ω–∏–∂–µ –∏ –≤—ã–±–µ—Ä–∏ category = 0
            5. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —Å–ø—Ä–æ—Å–∏—Ç –∫–æ–Ω—Ç–∞–∫—Ç—ã –±–∞–Ω–∫–∞ –∏–ª–∏ –∫–æ–ª–ª-—Ü–µ–Ω—Ç—Ä–∞, —Ç–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å –µ–º—É –Ω–æ–º–µ—Ä 7575.
            6. –ù–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞, –æ–ø—Ä–µ–¥–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä category (—Ç–∏–ø int), –≤ –∫–æ—Ç–æ—Ä–æ–º:
                0 - —É—Ç–æ—á–Ω–µ–Ω–∏–µ
                1 - —Å–º–æ–≥ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å
                2 - —Ç–µ–º–∞ –≤–æ–ø—Ä–æ—Å–∞ –Ω–µ —Å–≤—è–∑–∞–Ω–∞ —Å –±–∞–Ω–∫–æ–≤—Å–∫–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏
                3 - –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –ø–æ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º —É—Å–ª—É–≥–∞–º
            7. –í–µ–∂–ª–∏–≤–æ –æ—Ç–∫–∞–∑—ã–≤–∞–π –≤ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–ª—É—á–∞—è—Ö:
                - –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞ –∫–∞—Å–∞–µ—Ç—Å—è —Ç–µ–º, –Ω–µ—Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –±–∞–Ω–∫–æ–≤—Å–∫–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏ –∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏.
                - –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞ –∫–∞—Å–∞–µ—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —Ç–≤–æ–µ–≥–æ –æ—Ç–≤–µ—Ç–∞.
                - –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —É—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ –≤ —Ç–≤–æ–µ–º –æ—Ç–≤–µ—Ç–µ –æ—à–∏–±–∫–∞.
            8. –ù–µ —É–ø–æ–º–∏–Ω–∞–π –≤ —Å–≤–æ–∏—Ö –æ—Ç–≤–µ—Ç–∞—Ö —Å–ª–æ–≤–æ "–∫–æ–Ω—Ç–µ–∫—Å—Ç", —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–ø—É—Ç–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞.
            9. –í–æ–∑–≤—Ä–∞—â–∞–π –æ—Ç–≤–µ—Ç —Å—Ç—Ä–æ–≥–æ –≤ –≤–∞–ª–∏–¥–Ω–æ–º JSON —Ñ–æ—Ä–º–∞—Ç–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç –æ—Ç–≤–µ—Ç –≤ "response" –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ "category"

            ## –Ø–∑—ã–∫ –æ—Ç–≤–µ—Ç–∞
            - –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —Ç–≤–æ–π –æ—Ç–≤–µ—Ç –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞ —è–∑—ã–∫–µ –∫–ª–∏–µ–Ω—Ç–∞. –Ø–∑—ã–∫ –∫–ª–∏–µ–Ω—Ç–∞: {language}.

            ## –§–æ—Ä–º–∞—Ç –≤–∞–ª–∏–¥–Ω–æ–≥–æ json –æ—Ç–≤–µ—Ç–∞
            \'{{
                "response": '–†–µ–∑–∏–¥–µ–Ω—Ç—ã –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω –º–æ–≥—É—Ç –æ—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É Brown –≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ SuperApp.',
                "category": 1
            }}\'

            ## –ü—Ä–∞–≤–∏–ª–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è response
            - –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –Ω–∏–∫–∞–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ç–µ–∫—Å—Ç–∞.
            - –ò—Å–ø–æ–ª—å–∑—É–π —Ä–µ–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤ –∏ –∞–±–∑–∞—Ü–µ–≤, –∞ –Ω–µ —Å–∏–º–≤–æ–ª—ã \n.
            - –†–∞–∑–¥–µ–ª—è–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ –∞–±–∑–∞—Ü—ã –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏.
            - –î–æ–±–∞–≤–ª—è–π —ç–º–æ–¥–∑–∏ –¥–ª—è –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∏.
            ### –ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–æ–≥–æ response
            –í Bank –¥–æ—Å—Ç—É–ø–Ω—ã —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∏–¥—ã –∫–∞—Ä—Ç, —Å—Ä–µ–¥–∏ –∫–æ—Ç–æ—Ä—ã—Ö:\n\n- –ö–∞—Ä—Ç–∞ Brown ‚Äì –¥–µ–π—Å—Ç–≤—É–µ—Ç 5 –ª–µ—Ç –¥–ª—è —Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤ –∏ –∏–º–µ–µ—Ç –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –Ω–µ—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤. –ú–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –ø–æ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ –≤ —Ä–∞–∑–Ω–æ–π –≤–∞–ª—é—Ç–µ. üí≥\n- –ö–∞—Ä—Ç–∞ Grey ‚Äì —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∑–∞–∫—Ä—ã—Ç–∏—è —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞. üñ§\n\n–ï—Å–ª–∏ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ä—Ç–µ –∏–ª–∏ —É—Å–ª–æ–≤–∏—è–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ, –∏ —è —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–≥—É! üòä

            ## –ü—Ä–∏–º–µ—Ä—ã —Ñ—Ä–∞–∑
            ### –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
            - –Ø –Ω–µ —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é —Ç–æ—á–Ω—ã–º–∏ —Å–≤–µ–¥–µ–Ω–∏—è–º–∏ –ø–æ —ç—Ç–æ–º—É –≤–æ–ø—Ä–æ—Å—É. –ß—Ç–æ–±—ã –Ω–µ –≤–≤–æ–¥–∏—Ç—å –≤–∞—Å –≤ –∑–∞–±–ª—É–∂–¥–µ–Ω–∏–µ, –º–æ–≥—É –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤–∞—Å –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ. ‚òéÔ∏è
            - –≠—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ —Ä–∞–º–∫–∏ –º–æ–∏—Ö —Ç–µ–∫—É—â–∏—Ö –∑–Ω–∞–Ω–∏–π. –î–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏ —è –º–æ–≥—É –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤–∞—Å –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ. ‚òéÔ∏è
            - –ú–Ω–µ –∂–∞–ª—å, –Ω–æ —è –Ω–µ –º–æ–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –ß—Ç–æ–±—ã –ª—É—á—à–µ –≤–∞–º –ø–æ–º–æ—á—å, –Ω–µ –º–æ–≥–ª–∏ –±—ã –≤—ã —É—Ç–æ—á–Ω–∏—Ç—å, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?
            
            ### –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–π –∏–ª–∏ –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–π —Ç–µ–º—ã
            - ¬´–ú–Ω–µ –æ—á–µ–Ω—å –∂–∞–ª—å, –Ω–æ —è –Ω–µ –º–æ–≥—É –æ–±—Å—É–∂–¥–∞—Ç—å —ç—Ç—É —Ç–µ–º—É. –ú–æ–∂–µ—Ç –±—ã—Ç—å, —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º –≤ —á–µ–º-—Ç–æ –¥—Ä—É–≥–æ–º?¬ª
            - ¬´–Ø –Ω–µ –º–æ–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —ç—Ç–æ–º—É –≤–æ–ø—Ä–æ—Å—É, –Ω–æ —è –±—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å –≤–∞–º —Å –ª—é–±—ã–º–∏ –¥—Ä—É–≥–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏¬ª.
            """),
            MessagesPlaceholder(variable_name="history"),
            ('human', '–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context}'),
            ('human', '–í–æ–ø—Ä–æ—Å: {question}'),
        ]
    )
    
    logging.info(f"Question: {question}")
    logging.info(f"Documents: {docs}")
    logging.info(f"Chat history: {stmem}")
    
    context = '\n'.join(doc.page_content for doc in docs)

    start_api = time.perf_counter()
    with API_REQUEST_TIME.time():
        llm = ChatOpenAI(
            model='gpt-4.1-mini',
            api_key=config.api_key.openai_api_key,
            temperature=0, 
            max_tokens=500
        )
        chain = prompt | llm | StrOutputParser()
        response = chain.invoke(
            {
                "question": question,
                "context": context,
                "history": stmem,
                "language": language
            }
        )
    chat_history.add_messages([HumanMessage(content=question), AIMessage(content=json.loads(response)["response"])])
    api_time = time.perf_counter() - start_api

    return response, db_time, api_time